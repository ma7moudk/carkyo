#!/usr/bin/env python

import roslib  
import rospy

import serial
import string
import math

import re
from time import time, sleep
from ackermann_msgs.msg import AckermannDriveStamped

import tf

steering_angle=0
speed=0
mode='0x10'
angle='0x70'
acc='0x50'
enter='0x13'
flag= 'false'

def listener():
    rospy.loginfo(10)
    rospy.init_node('test')
    rospy.Subscriber("rbcar_robot_control/command", ackermann_msgs/AckermannDriveStamped, callback)
    # spin() simply keeps python from exiting until this node is stopped
    rospy.spin()

def callback(data):
    global steering_angle
    global speed
    global mode
    global angle
    global acc
    global enter
    global flag
    
    default_port= '/dev/ttyACM0'  # to be changed
    port = rospy.get_param('device', '/dev/ttyACM0')
    ser = serial.Serial(port=port, baudrate=9600, timeout=1)
    rospy.loginfo(ser)
    rospy.sleep(5) # Sleep for 8 seconds to wait for the board to boot then only write command.



while 1:
   
    com = serial.Serial('/dev/ttyACM0',baudrate=115200)
    rospy.loginfo(com)
    com.write('0x53')
    com.write('0x45')
    com.close()

def listener():
    rospy.loginfo(10)
    rospy.init_node('ser_pub', anonymous=True)
    rospy.Subscriber("rbcar_robot_control/command", ackermann_msgs/AckermannDriveStamped, callback)
    # spin() simply keeps python from exiting until this node is stopped
    rospy.spin()


if __name__ == '__main__':
    listener()
