#!/usr/bin/env python

import roslib  #; roslib.load_manifest('razor_imu_9dof')
import rospy

import serial
import string
import math
import tf
import re
from time import time, sleep
from sensor_msgs.msg    import NavSatFix
from sensor_msgs.msg    import NavSatStatus



rospy.init_node("node_gps")

pub = rospy.Publisher('/fix1', NavSatFix, queue_size=5)

GPSMsg = NavSatFix()
default_port='/dev/ttyACM0'
port = rospy.get_param('device', default_port)
ser = serial.Serial(port=port,baudrate=38400, timeout=1)
rospy.sleep(5) # Sleep for 8 seconds to wait for the board to boot then only write command.
#ser.write('#ox' + chr(13)) # To start display angle and sensor reading in text 
while 1:
    line = ser.readline()
    #rospy.loginfo(line)
   # line = line.replace(":",",")
    words = string.split(line,",")    # Fields split
    print words[0]
    if len(words) > 2:
        try:
     	    GPSMsg.latitude = float(words[1])
            GPSMsg.longitude = float(words[3])
            GPSMsg.altitude = float(words[5])

     
        except Exception as e:
            print e
#	GPSMsg.header.seq= 1
        GPSMsg.header.stamp= rospy.Time.now()
        GPSMsg.header.frame_id = 'gps_link'
        pub.publish(GPSMsg)

    print GPSMsg #Gibt alle Sensorwerte in einer Art Tabelle aus
   
ser.close
